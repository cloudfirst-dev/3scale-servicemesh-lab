apiVersion: config.istio.io/v1alpha2
kind: handler
metadata:
  creationTimestamp: null
  name: admin-credentials
  namespace: {{ .Values.smNamespace }}
spec:
  adapter: threescale
  connection:
    address: 'dns:///threescale-istio-adapter:3333'
  params:
    access_token: {{ .Values.accessToken }}
    service_id: '{{ .Values.serviceId }}'
    system_url: 'https://3scale-admin.{{ .Values.wildcardDomain }}'
---
apiVersion: config.istio.io/v1alpha2
kind: instance
metadata:
  creationTimestamp: null
  name: admin-credentials
  namespace: {{ .Values.smNamespace }}
spec:
  params:
    action:
      method: request.method | "get"
      path: request.url_path
      service: destination.labels["service-mesh.3scale.net/service-id"] | ""
    subject:
      properties:
        app_id: request.query_params["app_id"] | request.headers["app_id"] | ""
        app_key: request.query_params["app_key"] | request.headers["app_key"] | ""
        client_id: request.auth.claims["azp"] | ""
      user: request.query_params["user_key"] | request.headers["user_key"] | ""
  template: threescale-authorization
---
apiVersion: config.istio.io/v1alpha2
kind: rule
metadata:
  creationTimestamp: null
  name: admin-credentials
  namespace: {{ .Values.smNamespace }}
spec:
  actions:
  - handler: admin-credentials.handler.{{ .Values.smNamespace }}
    instances:
    - admin-credentials.instance.{{ .Values.smNamespace }}
  match: |-
    context.reporter.kind == "inbound" &&
    destination.labels["service-mesh.3scale.net/credentials"] == "admin-credentials" &&
    destination.labels["service-mesh.3scale.net/authentication-method"] == ""